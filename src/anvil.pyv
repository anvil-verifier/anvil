sort string
sort json_value
sort uid
sort resource_version
sort kind @no_minimize @printed_by(const_printer) @no_print

immutable constant ConfigMapKind: kind @no_print
immutable constant CustomResourceKind: kind @no_print
immutable constant DaemonSetKind: kind @no_print
immutable constant PersistentVolumeClaimKind: kind @no_print
immutable constant PodKind: kind @no_print
immutable constant RoleKind: kind @no_print
immutable constant RoleBindingKind: kind @no_print
immutable constant StatefulSetKind: kind @no_print
immutable constant ServiceKind: kind @no_print
immutable constant ServiceAccountKind: kind @no_print
immutable constant SecretKind: kind @no_print

sort rest_id
sort host @no_minimize @printed_by(const_printer) @no_print

immutable constant Client: host @no_print
immutable constant CustomController: host @no_print
immutable constant BuiltInController: host @no_print

axiom distinct(Client,
    CustomController,
    BuiltInController
)

axiom forall H:host. (H = Client |
    H = CustomController |
    H = BuiltInController)

axiom distinct(ConfigMapKind,
    CustomResourceKind,
    DaemonSetKind,
    PersistentVolumeClaimKind,
    PodKind,
    RoleKind,
    RoleBindingKind,
    StatefulSetKind,
    ServiceKind,
    ServiceAccountKind,
    SecretKind
)

axiom forall K:kind. (K = ConfigMapKind |
    K = CustomResourceKind |
    K = DaemonSetKind |
    K = PersistentVolumeClaimKind |
    K = PodKind |
    K = RoleKind |
    K = RoleBindingKind |
    K = StatefulSetKind |
    K = ServiceKind |
    K = ServiceAccountKind |
    K = SecretKind)

immutable constant uid_none: uid

# Below are used to define the API server state

mutable relation uid_used(uid) # uid counter
mutable relation resource_version_used(resource_version) # rv counter

# This is the resources (Map<ObjectRef, DynamicObjectView>)
mutable relation cluster_state_objects(
    # ObjectRef
    kind,
    string,
    string,
    # DynamicObjectView
    kind,
    # metadata
    string, # name in ObjectMeta
    string, # namespace in ObjectMeta
    resource_version,
    uid,
    # owner_reference in ObjectMeta
    kind, string, uid,
    # spec
    json_value,
    # status
    json_value
)

init !cluster_state_objects(K, N, NS, K1, N1, NS1, RV1, U1, KK1, S1, UU1, JSPEC1, JSTATUS1)

invariant cluster_state_objects(K, N, NS, K1, N1, NS1, RV1, U1, KK1, S1, UU1, JSPEC1, JSTATUS1)
    & cluster_state_objects(K, N, NS, K2, N2, NS2, RV2, U2, KK2, S2, UU2, JSPEC2, JSTATUS2)
    -> K1 = K2 
        & N1 = N2
        & NS1 = NS2
        & RV1 = RV2
        & U1 = U2
        & KK1 = KK2
        & S1 = S2
        & UU1 = UU2
        & JSPEC1 = JSPEC2
        & JSTATUS1 = JSTATUS2

mutable relation stable_resources(kind, string, string)

# Below are used to define the network state
mutable relation rest_id_used(rest_id) # rest id counter

mutable relation get_request(rest_id, host, kind, string, string)
mutable relation create_request(rest_id, host, string,
    # DynamicObjectView
    kind,
    # metadata
    string, # name in ObjectMeta
    string, # namespace in ObjectMeta
    resource_version,
    uid,
    # owner_reference in ObjectMeta
    kind, string, uid,
    # spec
    json_value,
    # status
    json_value)
init !create_request(
    V1,
    V2,
    V3,
    V4,
    V5,
    V6,
    V7,
    V8,
    V9,
    V10,
    V11,
    V12,
    V13
    )

mutable relation delete_request(rest_id, host, kind, string, string)
init !delete_request(
    V1,
    V2,
    V3,
    V4,
    V5
    )

mutable relation update_request(rest_id, host, string, string,
    # DynamicObjectView
    kind,
    # metadata
    string, # name in ObjectMeta
    string, # namespace in ObjectMeta
    resource_version,
    uid,
    # owner_reference in ObjectMeta
    kind, string, uid,
    # spec
    json_value,
    # status
    json_value)
init !update_request(
    V1,
    V2,
    V3,
    V4,
    V5,
    V6,
    V7,
    V8,
    V9,
    V10,
    V11,
    V12,
    V13,
    V14
    )

mutable relation update_status_request(rest_id, host, string, string,
    # DynamicObjectView
    kind,
    # metadata
    string, # name in ObjectMeta
    string, # namespace in ObjectMeta
    resource_version,
    uid,
    # owner_reference in ObjectMeta
    kind, string, uid,
    # spec
    json_value,
    # status
    json_value)

mutable relation error_response(rest_id, host)

mutable relation get_create_update_response(rest_id, host,
    # DynamicObjectView
    kind,
    # metadata
    string, # name in ObjectMeta
    string, # namespace in ObjectMeta
    resource_version,
    uid,
    # owner_reference in ObjectMeta
    kind, string, uid,
    # spec
    json_value,
    # status
    json_value)
mutable relation delete_response(rest_id, host)

# auxiliary state
mutable relation crash_enabled
mutable relation transient_failure_enabled

# controller state

mutable relation reconcile_step_init(kind, string, string)
mutable relation reconcile_step_after_get(kind, string, string)
mutable relation reconcile_step_after_create(kind, string, string)
mutable relation reconcile_step_after_update(kind, string, string)
mutable relation reconcile_step_error(kind, string, string)
mutable relation reconcile_step_done(kind, string, string)

mutable relation pending_req_msg(kind, string, string, rest_id) # rest_id is sufficient here
mutable relation triggering_cr(
    # ObjectRef
    kind, string, string,
    # the triggering CR (omitting spec and status)
    string, string, resource_version, uid
)

# Client actions

transition client_create_custom_resource(
    # DynamicObjectView
    # metadata
    obj_name: string, # name in ObjectMeta
    obj_namespace: string, # namespace in ObjectMeta
    obj_rv:resource_version,
    # owner_reference in ObjectMeta
    obj_owner_ref_kind: kind, obj_owner_ref_name: string, obj_owner_ref_uid: uid,
    # spec
    obj_spec: json_value,
    # status
    obj_status: json_value,
    # rest id to use
    my_rest_id: rest_id
)
    modifies rest_id_used, create_request
    & (!rest_id_used(my_rest_id))
    & (forall i. rest_id_used'(i) <-> (rest_id_used(i) | i = my_rest_id))
    & (forall any_rest_id, any_host, any_ns_in_req,
        # DynamicObjectView
        any_kind,
        # metadata
        any_name_in_obj, # name in ObjectMeta
        any_ns_in_obj, # namespace in ObjectMeta
        any_resource_version,
        any_uid,
        # owner_reference in ObjectMeta
        any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
        # spec
        any_spec_json_value,
        # status
        any_status_json_value.

        create_request'(any_rest_id, any_host, any_ns_in_req,
            # DynamicObjectView
            any_kind,
            # metadata
            any_name_in_obj, # name in ObjectMeta
            any_ns_in_obj, # namespace in ObjectMeta
            any_resource_version,
            any_uid,
            # owner_reference in ObjectMeta
            any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
            # spec
            any_spec_json_value,
            # status
            any_status_json_value
        )
        <->
        (
            create_request(any_rest_id, any_host, any_ns_in_req,
                # DynamicObjectView
                any_kind,
                # metadata
                any_name_in_obj, # name in ObjectMeta
                any_ns_in_obj, # namespace in ObjectMeta
                any_resource_version,
                any_uid,
                # owner_reference in ObjectMeta
                any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
                # spec
                any_spec_json_value,
                # status
                any_status_json_value
            ) 
            | 
            (
                any_rest_id = my_rest_id
                & any_host = Client
                & any_ns_in_req = obj_namespace
                & any_kind = CustomResourceKind
                & any_name_in_obj = obj_name
                & any_ns_in_obj = obj_namespace
                & any_resource_version = obj_rv
                & any_uid = uid_none
                & any_owner_ref_kind = obj_owner_ref_kind
                & any_owner_ref_name = obj_owner_ref_name
                & any_owner_ref_uid = obj_owner_ref_uid
                & any_spec_json_value = obj_spec
                & any_status_json_value = obj_status
            )
        )
    )

invariant forall any_rest_id, any_host, any_ns_in_req,
        # DynamicObjectView
        any_kind,
        # metadata
        any_name_in_obj, # name in ObjectMeta
        any_ns_in_obj, # namespace in ObjectMeta
        any_resource_version,
        any_uid,
        # owner_reference in ObjectMeta
        any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
        # spec
        any_spec_json_value,
        # status
        any_status_json_value.
        create_request(any_rest_id, any_host, any_ns_in_req,
                # DynamicObjectView
                any_kind,
                # metadata
                any_name_in_obj, # name in ObjectMeta
                any_ns_in_obj, # namespace in ObjectMeta
                any_resource_version,
                any_uid,
                # owner_reference in ObjectMeta
                any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
                # spec
                any_spec_json_value,
                # status
                any_status_json_value
        ) -> rest_id_used(any_rest_id) 


transition client_update_custom_resource(
    # DynamicObjectView
    # metadata
    obj_name: string, # name in ObjectMeta
    obj_namespace: string, # namespace in ObjectMeta
    obj_rv:resource_version,
    # owner_reference in ObjectMeta
    obj_owner_ref_kind: kind, obj_owner_ref_name: string, obj_owner_ref_uid: uid,
    # spec
    obj_spec: json_value,
    # status
    obj_status: json_value,
    # rest id to use
    my_rest_id: rest_id
)
    modifies rest_id_used, update_request
    & (!rest_id_used(my_rest_id))
    & (forall i. rest_id_used'(i) <-> (rest_id_used(i) | i = my_rest_id))
    & (forall any_rest_id, any_host, any_ns_in_req, any_name_in_req,
        # DynamicObjectView
        any_kind,
        # metadata
        any_name_in_obj, # name in ObjectMeta
        any_ns_in_obj, # namespace in ObjectMeta
        any_resource_version,
        any_uid,
        # owner_reference in ObjectMeta
        any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
        # spec
        any_spec_json_value,
        # status
        any_status_json_value.

        update_request'(any_rest_id, any_host, any_ns_in_req, any_name_in_req,
            # DynamicObjectView
            any_kind,
            # metadata
            any_name_in_obj, # name in ObjectMeta
            any_ns_in_obj, # namespace in ObjectMeta
            any_resource_version,
            any_uid,
            # owner_reference in ObjectMeta
            any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
            # spec
            any_spec_json_value,
            # status
            any_status_json_value
        )
        <->
        (
            update_request(any_rest_id, any_host, any_ns_in_req, any_name_in_req,
                # DynamicObjectView
                any_kind,
                # metadata
                any_name_in_obj, # name in ObjectMeta
                any_ns_in_obj, # namespace in ObjectMeta
                any_resource_version,
                any_uid,
                # owner_reference in ObjectMeta
                any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
                # spec
                any_spec_json_value,
                # status
                any_status_json_value
            ) 
            | 
            (
                any_rest_id = my_rest_id
                & any_host = Client
                & any_ns_in_req = obj_namespace
                & any_name_in_req = obj_name
                & any_kind = CustomResourceKind
                & any_name_in_obj = obj_name
                & any_ns_in_obj = obj_namespace
                & any_resource_version = obj_rv
                & any_uid = uid_none
                & any_owner_ref_kind = obj_owner_ref_kind
                & any_owner_ref_name = obj_owner_ref_name
                & any_owner_ref_uid = obj_owner_ref_uid
                & any_spec_json_value = obj_spec
                & any_status_json_value = obj_status
            )
        )
    )

invariant forall any_rest_id, any_host, any_ns_in_req, any_name_in_req,
        # DynamicObjectView
        any_kind,
        # metadata
        any_name_in_obj, # name in ObjectMeta
        any_ns_in_obj, # namespace in ObjectMeta
        any_resource_version,
        any_uid,
        # owner_reference in ObjectMeta
        any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
        # spec
        any_spec_json_value,
        # status
        any_status_json_value.
        update_request(any_rest_id, any_host, any_ns_in_req, any_name_in_req,
                # DynamicObjectView
                any_kind,
                # metadata
                any_name_in_obj, # name in ObjectMeta
                any_ns_in_obj, # namespace in ObjectMeta
                any_resource_version,
                any_uid,
                # owner_reference in ObjectMeta
                any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
                # spec
                any_spec_json_value,
                # status
                any_status_json_value
        ) -> rest_id_used(any_rest_id) 
invariant forall any_rest_id, any_host, any_ns_in_req, any_name_in_req,
        # DynamicObjectView
        any_kind,
        # metadata
        any_name_in_obj, # name in ObjectMeta
        any_ns_in_obj, # namespace in ObjectMeta
        any_resource_version,
        any_uid,
        # owner_reference in ObjectMeta
        any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
        # spec
        any_spec_json_value,
        # status
        any_status_json_value.
        update_request(any_rest_id, any_host, any_ns_in_req, any_name_in_req,
                # DynamicObjectView
                any_kind,
                # metadata
                any_name_in_obj, # name in ObjectMeta
                any_ns_in_obj, # namespace in ObjectMeta
                any_resource_version,
                any_uid,
                # owner_reference in ObjectMeta
                any_owner_ref_kind, any_owner_ref_name, any_owner_ref_uid,
                # spec
                any_spec_json_value,
                # status
                any_status_json_value
        ) -> rest_id_used(any_rest_id)

transition client_delete_custom_resource(
    obj_namespace: string,
    obj_name: string,
    # rest id to use
    my_rest_id: rest_id
)
    modifies rest_id_used, delete_request
    & (!rest_id_used(my_rest_id))
    & (forall i. rest_id_used'(i) <-> (rest_id_used(i) | i = my_rest_id))
    & (forall any_rest_id, any_host, any_kind, any_ns_in_req, any_name_in_req.
        delete_request'(any_rest_id, any_host, any_kind, any_ns_in_req, any_name_in_req)
        <->
        (
            delete_request(any_rest_id, any_host, any_kind, any_ns_in_req, any_name_in_req) 
            | 
            (
                any_rest_id = my_rest_id
                & any_host = Client
                & any_kind = CustomResourceKind
                & any_ns_in_req = obj_namespace
                & any_name_in_req = obj_name
            )
        )
    )
invariant forall any_rest_id, any_host, any_kind, any_ns_in_req, any_name_in_req.
        delete_request(any_rest_id, any_host, any_kind, any_ns_in_req, any_name_in_req) -> rest_id_used(any_rest_id)

