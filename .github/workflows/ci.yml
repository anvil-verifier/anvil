name: Continuous integration
run-name: Regression tests run by ${{ github.actor }}
on:
  # push:
  #   branches:
  #     - main
  #   paths-ignore:
  #     - "README.md"
  #     - ".gitignore"
  #     - "doc/**"
  pull_request:
  merge_group:
  workflow_dispatch:
jobs:
  controller-verification:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Download Verus
        uses: actions/checkout@v2
        with:
          repository: verus-lang/verus
          path: verus
          ref: 69243cb3b7990397c289d8a156576da3675a6b36
      - name: Move Verus
        run: mv verus ../verus
      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
      - name: Build Verus
        run: |
          cd ../verus/source
          ./tools/get-z3.sh
          source ../tools/activate
          vargo build --release
      - name: Build fluent controller
        run: VERUS_DIR="$(dirname "${PWD}")/verus" ./build.sh fluent_controller.rs --rlimit 30 --time
      - name: Build rabbitmq controller
        run: VERUS_DIR="$(dirname "${PWD}")/verus" ./build.sh rabbitmq_controller.rs --rlimit 30 --time
      - name: Build simple controller
        run: VERUS_DIR="$(dirname "${PWD}")/verus" ./build.sh simple_controller.rs --rlimit 30 --time
      - name: Build zookeeper controller
        run: VERUS_DIR="$(dirname "${PWD}")/verus" ./build.sh zookeeper_controller.rs --rlimit 30 --time
  unit-tests:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Download Verus
        uses: actions/checkout@v2
        with:
          repository: verus-lang/verus
          path: verus
      - name: Move Verus
        run: mv verus ../verus
      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
      - name: Build Verus
        run: |
          cd ../verus/source
          ./tools/get-z3.sh
          source ../tools/activate
          vargo build --release
      - name: Run unit tests
        run: cargo test
  fluent-e2e-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.20"
      - name: Install kind
        run: go install sigs.k8s.io/kind@v0.20.0
      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
      - name: Deploy fluent controller
        run: ./local-test.sh fluent
      - name: Run fluent e2e tests
        run: cd e2e && cargo run -- fluent
  rabbitmq-e2e-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.20"
      - name: Install kind
        run: go install sigs.k8s.io/kind@v0.20.0
      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
      - name: Deploy rabbitmq controller
        run: ./local-test.sh rabbitmq
      - name: Run rabbitmq e2e tests
        run: cd e2e && cargo run -- rabbitmq
  rabbitmq-scaling-e2e-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.20"
      - name: Install kind
        run: go install sigs.k8s.io/kind@v0.20.0
      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
      - name: Deploy rabbitmq controller
        run: ./local-test.sh rabbitmq
      - name: Run rabbitmq e2e tests for scaling
        run: cd e2e && cargo run -- rabbitmq-scaling
  rabbitmq-ephemeral-e2e-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.20"
      - name: Install kind
        run: go install sigs.k8s.io/kind@v0.20.0
      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
      - name: Deploy rabbitmq controller
        run: ./local-test.sh rabbitmq
      - name: Run rabbitmq e2e tests for ephemeral
        run: cd e2e && cargo run -- rabbitmq-ephemeral
  zookeeper-e2e-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.20"
      - name: Install kind
        run: go install sigs.k8s.io/kind@v0.20.0
      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
      - name: Deploy zookeeper controller
        run: ./local-test.sh zookeeper
      - name: Run zookeeper e2e tests
        run: cd e2e && cargo run -- zookeeper
  zookeeper-scaling-e2e-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.20"
      - name: Install kind
        run: go install sigs.k8s.io/kind@v0.20.0
      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
      - name: Deploy zookeeper controller
        run: ./local-test.sh zookeeper
      - name: Run zookeeper e2e tests for scaling
        run: cd e2e && cargo run -- zookeeper-scaling
  zookeeper-ephemeral-e2e-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.20"
      - name: Install kind
        run: go install sigs.k8s.io/kind@v0.20.0
      - name: Install Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused -fsSL "https://sh.rustup.rs" | sh -s -- --default-toolchain none -y
      - name: Deploy zookeeper controller
        run: ./local-test.sh zookeeper
      - name: Run zookeeper e2e tests for ephemeral storage
        run: cd e2e && cargo run -- zookeeper-ephemeral
