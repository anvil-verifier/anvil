name: Controller build
on:
  workflow_dispatch:
env:
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build-simple-controller:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log into registry ghcr.io
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Build simple controller image
        run: |
          cp docker/controller/Dockerfile .
          docker build -t ghcr.io/${{ env.IMAGE_NAME }}/simple-controller:latest --build-arg APP=simple .
          docker tag ghcr.io/${{ env.IMAGE_NAME }}/simple-controller:latest ghcr.io/${{ env.IMAGE_NAME }}/simple-controller:${{ github.sha }}
      - name: Push simple controller image
        run: |
          docker push ghcr.io/${{ env.IMAGE_NAME }}/simple-controller:latest
          docker push ghcr.io/${{ env.IMAGE_NAME }}/simple-controller:${{ github.sha }}
  build-zookeeper-controller:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log into registry ghcr.io
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Build zookeeper controller image
        run: |
          cp docker/controller/Dockerfile .
          docker build -t ghcr.io/${{ env.IMAGE_NAME }}/zookeeper-controller:latest --build-arg APP=zookeeper .
          docker tag ghcr.io/${{ env.IMAGE_NAME }}/zookeeper-controller:latest ghcr.io/${{ env.IMAGE_NAME }}/zookeeper-controller:${{ github.sha }}
      - name: Push zookeeper controller image
        run: |
          docker push ghcr.io/${{ env.IMAGE_NAME }}/zookeeper-controller:latest
          docker push ghcr.io/${{ env.IMAGE_NAME }}/zookeeper-controller:${{ github.sha }}
  build-rabbitmq-controller:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log into registry ghcr.io
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Build rabbitmq controller image
        run: |
          cp docker/controller/Dockerfile .
          docker build -t ghcr.io/${{ env.IMAGE_NAME }}/rabbitmq-controller:latest --build-arg APP=rabbitmq .
          docker tag ghcr.io/${{ env.IMAGE_NAME }}/rabbitmq-controller:latest ghcr.io/${{ env.IMAGE_NAME }}/rabbitmq-controller:${{ github.sha }}
      - name: Push rabbitmq controller image
        run: |
          docker push ghcr.io/${{ env.IMAGE_NAME }}/rabbitmq-controller:latest
          docker push ghcr.io/${{ env.IMAGE_NAME }}/rabbitmq-controller:${{ github.sha }}
  build-fluent-controller:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Log into registry ghcr.io
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
      - name: Build fluent controller image
        run: |
          cp docker/controller/Dockerfile .
          docker build -t ghcr.io/${{ env.IMAGE_NAME }}/fluent-controller:latest --build-arg APP=fluent .
          docker tag ghcr.io/${{ env.IMAGE_NAME }}/fluent-controller:latest ghcr.io/${{ env.IMAGE_NAME }}/fluent-controller:${{ github.sha }}
      - name: Push fluent controller image
        run: |
          docker push ghcr.io/${{ env.IMAGE_NAME }}/fluent-controller:latest
          docker push ghcr.io/${{ env.IMAGE_NAME }}/fluent-controller:${{ github.sha }}
